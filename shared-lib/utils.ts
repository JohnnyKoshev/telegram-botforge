export async function handleGeneralizedHelp(
    conversation,
    ctx,
    sendMessage,
) {
    ctx.reply('üçø –•–æ—Ç–∏—Ç–µ —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ?  –ò–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞?\n' +
        '\n–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ, —è –ø–µ—Ä–µ—à–ª—é –µ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º:\n');

    const helpText = await conversation.waitFor('message', {
        otherwise: async (ctx) => {
            await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç');
        },
    });

    if (!helpText.message.text) {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç');
        return false;
    }

    try {
        await sendMessage(helpText.message.text, {
            chatId: ctx.from.id,
            username: ctx.from.username ?? '',
        });
    } catch (e) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
        console.error(e);
        return false;
    }

    ctx.reply('‚úÖ –°–ø–∞—Å–∏–±–æ, –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏ —Å –≤–∞–º–∏ –≤—Å–∫–æ—Ä–µ —Å–≤—è–∂—É—Ç—Å—è.');
    return true;
}


export function processError(botName, message, context, stack) {
    return `‚≠ï –í —Ä–∞–±–æ—Ç–µ ${botName} –æ—à–∏–±–∫–∞ ${message}.\n–ö–æ–Ω—Ç–µ–∫—Å—Ç:\n${context}\n–°—Ç–µ–∫:\n${stack}\n`;
}